# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # - uses: chrislennon/action-aws-cli@v1.1

    - name: Create empty AWS config
      run: |
        aws configure set aws_access_key_id default_access_key
        aws configure set aws_secret_access_key default_secret_key
        aws configure set default.region ap-northeast-1

    # Setup user executables in path
    - name: Update PATH
      run: |
        echo $PATH
        echo "::add-path::/home/runner/bin"

    # Kubectl is already included in the ubuntu image.
    - name: Install k3d and argo client
      run: |
        cd argo/
        make install_k3d
        make install_argo

    - name: Setup local cluster
      run: |
        cd argo/
        make create_cluster
        make switch_context
        make setup_argo_controller
        make setup_localstack

    - name: Check cluster
      run: |
        # Need to wait or else -> error: no matching resources found
        sleep 20 
        cd argo/
        make wait_argo
        make wait_localstack
        make get_nodes
        make get_pods
        make get_jobs
        make describe_pods
        argo version
        make list

    - name: Setup s3 data-fixtures
      run: |
        cd argo/
        make forward_localstack_s3_bg
        sleep 2
        make setup_data_fixture

    - name: Run test workflows
      run: |
        cd argo/
        WF_FILENAME=hello-world-s3.yaml make submit || (make logs; make get; exit 1)
        make logs
        make get
        make delete

    - name: Delete cluster
      run: |
        cd argo/
        make delete_cluster

  