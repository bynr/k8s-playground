# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:

jobs:
  build:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run : |                                                                
          docker version                                                       
          docker info   
      - run:                                                                   
          name: Install PIP                                                    
          command: sudo apt-get install python-pip python-dev
      - run:                                                                   
          name: Install awscli                                                 
          command: |                                                           
            sudo pip install awscli                                            
            # eval $(aws ecr get-login --region ap-northeast-1 --no-include-email)
      - run: 
          name: Create empty AWS config
          command: |
            aws configure set aws_access_key_id default_access_key
            aws configure set aws_secret_access_key default_secret_key
            aws configure set default.region ap-northeast-1
      - run:
          name: Make user executables available globally
          command: |
            echo 'export PATH=$HOME/bin:$PATH' >> $BASH_ENV
            source /home/circleci/.bashrc      

      # Assumes Kubectl is already included.
      - run: 
          name: Install k3d and argo client
          command: |
            cd argo/
            make install_k3d
            make install_argo

      - run:
          name: Setup local cluster
          command: |
            cd argo/
            make create_cluster
            make switch_context
            make create_namespace

      - run:
          name: Setup services
          command: |
            cd argo/
            make setup_localstack
            make setup_argo_controller
            # Need to wait or else -> error: no matching resources found
            sleep 20
            make wait_localstack
            make wait_argo
            sleep 10

      - run:
          name: Check cluster
          command: |
            cd argo/
            kubectl cluster-info
            make get_nodes
            make get_pods
            make get_jobs
            make describe_pods
            argo version
            make list

      - run:
          name: Setup s3 data-fixtures
          command: |
            cd argo/
            make setup_data_fixture_v3

      - run:
          name: Run test workflows
          command: |
            cd argo/
            WF_FILENAME=hello-world-s3.yaml make submit || (make logs; make get; exit 1)
            make logs
            make get
            make delete

      - run:
          name: Delete cluster
          command: |
            cd argo/
            make delete_cluster


  # Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - build
